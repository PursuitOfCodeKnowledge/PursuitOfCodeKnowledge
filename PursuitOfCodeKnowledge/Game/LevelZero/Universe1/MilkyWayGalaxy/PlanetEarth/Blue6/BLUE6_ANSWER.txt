Чтобы выполнить задание:
Первое нужно посмотреть где ты находишься, используй команду pwd:
pwd
К примеру она тебе покажет путь /home/sergey/Desktop/PursuitOfCodeKnowledge.git/PursuitOfCodeKnowledge/Game/LevelZero/Universe1/MilkyWayGalaxy/PlanetEarth/Blue6, получается ты сейчас находишься в Blue6, 
тебе нужно вернуться назад используй команду cd ..:
cd ..
После этого набери команду ls или ls -a и посмотри что находится вокруг тебя какие файлы и директории:
ls
или
ls -a
Затем набери команду mkdir чтобы создать директорию Blue (в том случае если ещё не создавал директорию Blue):
mkdir Blue
Затем перейди директорию в Blue6:
cd Blue6
Потом скопируй файл BLUE6.txt в директорию Blue:
cp BLUE6.txt ../Blue/
Затем проверь что скопировал файл BLUE6.txt в директорию Blue при помощи команды ls:
ls ../Blue/BLUE6.txt
После перенеси  файл файл BLUE6_ANSWER.txt в директорию Blue:
mv BLUE6_ANSWER.txt ../Blue/
Потом удали файл BLUE6.txt при помощи команды rm:
rm BLUE6.txt
или
rm -i BLUE6.txt
или
rm -f BLUE6.txt
После выйди из этой директории Blue6:
cd ..
Затем удали директорию Blue6:
rm -r Blue6
После убедись что удалил директорию:
ls 
или
ls -a

Если исследовал уже директорию Blue5, то подключаемся к postgres: 
sudo -u postgres psql postgres
Вводим пароль от пользователя postgres, который мы создавали до этого

Теперь посмотрим какие базы данных при помощи команды \l:
\l

Видим demo и переходим в неё при помощи команды \c:
\c demo

Потом можно посмотреть какие таблицы в базе данных demo:
\dt

Затем можно посмотреть подробнее о таблице, например bookings(столбцы и ключи):
\d bookings

Потом можно посмотреть подробнее о таблице, например tickets(столбцы и ключи):
\d tickets

Пример 1: 
--Успешная транзакция — создание нового бронирования и билета
BEGIN;

-- 1. Вставляем бронирование
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('76BFFF', NOW(), 123456.78);

-- 2. Вставляем билет, ссылающийся на это бронирование
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '7777777777777',
  '76BFFF',
  '7777 777777',
  'AI',
  '{"phone": "100100101111111110000111111111111001"}'
);

COMMIT;

select * from bookings where book_ref = '76BFFF';
select * from tickets where ticket_no = '7777777777777';

Пример 2:
-- Ошибка и откат — неверный book_ref
BEGIN;

-- 1. Вставляем билет с НЕСУЩЕСТВУЮЩИМ book_ref
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '3333333333333',
  'NOTEXI',
  '3333 333333',
  'Artificial Intelligence',
  '{"phone": "1111101111100011010111100010101101"}'
);

-- Эта команда вызовет ошибку: ERROR:  insert or update on table "tickets" violates foreign key constraint "tickets_book_ref_fkey"
-- DETAIL:  Key (book_ref)=(NOTEXI) is not present in table "bookings".

COMMIT;

select * from tickets where ticket_no = '3333333333333';

Пример 3: 
-- Вставка + отмена изменений вручную
BEGIN;

-- Добавляем бронирование
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('32DCD5', NOW(), 98765.43);

-- Добавляем билет
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '3333333333333',
  '32DCD5',
  '3333 333333',
  'Искусственный Интеллект',
  '{"email": "ai@ai.ai"}'
);

-- В вручную решили отменить транзакцию:
ROLLBACK;

select * from tickets where ticket_no = '3333333333333';

Пример 4:
-- SAVEPOINT и частичный откат
BEGIN;

-- Вставка бронирования
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('10F447', NOW(), 77777.00);

SAVEPOINT inserted_booking;

-- Ошибочная попытка вставить билет (неверный JSON)
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '1111111111111',
  '10F447',
  '1111 111111',
  'BROKEN JSON',
  '{"phone": "bad format"'  -- ошибка: незакрытая кавычка
);

-- Откат только до savepoint
ROLLBACK TO SAVEPOINT inserted_booking;

-- Поправим и вставим заново
INSERT INTO bookings.tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '1111111111111',
  '10F447',
  '1111 111111',
  'Artificial Intelligence',
  '{"phone": "101001110001011110001011110111111"}'
);

COMMIT;

select * from bookings where book_ref = '10F447';
select * from tickets where ticket_no = '1111111111111';

После этого выходим из базы данных demo:
\q

Потом дальше иследуй другую директорию, например Green1:
cd Green1

To complete the task:
First you need to see where you are, use the pwd command:
pwd
For example, she'll show you the way  /home/sergey/Desktop/PursuitOfCodeKnowledge.git/PursuitOfCodeKnowledge/Game/LevelZero/Universe1/MilkyWayGalaxy/PlanetEarth/Blue6
 it turns out that you are currently in Blue6,
you need to go back using the cd .. :
cd ..
After that, type the command ls or ls -a and see what is around you, which files and directories:
ls
or
ls -a
Then type the mkdir command to create
the Blue directory(if you didn't create Blue directory):
mkdir Blue
Then go to the directory in Blue6:
cd Blue6
Then  copy the file BLUE6.txt to the Blue:
cp BLUE6.txt ../Blue/
Then check that you copied the file. BLUE6.txt to the Blue directory using the command ls:
ls ../Blue/BLUE6.txt
Then transfer the file BLUE6_ANSWER.txt to the Blue:
mv BLUE6_ANSWER.txt ../Blue/
Then delete the file BLUE6.txt using the rm command:
rm BLUE6.txt
or
rm -i BLUE6.txt
or
rm -f BLUE6.txt
Then exit this directory Blue6:
cd ..
Then delete the Blue6 directory:
rm -r Blue6
After that, make sure that you have deleted the directory:
ls
or
ls -a

If you have already explored the Blue5 directory, then we connect to postgres:
sudo -u postgres psql postgres
We enter the password from the postgres user that we created before

Now let's look at which databases using the \l command:
\l

We see the demo and go to it using the \c command:
\c demo

Then you can see which tables are in the demo database.:
\dt

Then you can view more information about the table, for example bookings(columns and keys):
\d bookings

Then you can see more details about the table, for example tickets(columns and keys):
\d tickets

Example 1: 
--Успешная транзакция — создание нового бронирования и билета
BEGIN;

-- 1. Inserting booking
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('76BFFF', NOW(), 123456.78);

-- 2. Inserting ticket refference on booking
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '7777777777777',
  '76BFFF',
  '7777 777777',
  'AI',
  '{"phone": "100100101111111110000111111111111001"}'
);

COMMIT;

select * from bookings where book_ref = '76BFFF';
select * from tickets where ticket_no = '7777777777777';

Example 2:
-- Ошибка и откат — неверный book_ref
BEGIN;

-- 1. Inserting ticket with no exist book_ref
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '3333333333333',
  'NOTEXI',
  '3333 333333',
  'Artificial Intelligence',
  '{"phone": "1111101111100011010111100010101101"}'
);

-- Эта команда вызовет ошибку: ERROR:  insert or update on table "tickets" violates foreign key constraint "tickets_book_ref_fkey"
-- DETAIL:  Key (book_ref)=(NOTEXI) is not present in table "bookings".

COMMIT;

select * from tickets where ticket_no = '3333333333333';

Example 3: 
-- Вставка + отмена изменений вручную
BEGIN;

-- Inserting booking
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('32DCD5', NOW(), 98765.43);

-- Inserting ticket
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '3333333333333',
  '32DCD5',
  '3333 333333',
  'Искусственный Интеллект',
  '{"email": "ai@ai.ai"}'
);

-- Manual decided to cancel transaction:
ROLLBACK;

select * from tickets where ticket_no = '3333333333333';

Example 4:
-- SAVEPOINT и частичный откат
BEGIN;

-- Inserting booking
INSERT INTO bookings (book_ref, book_date, total_amount)
VALUES ('10F447', NOW(), 77777.00);

SAVEPOINT inserted_booking;

-- Ошибочная попытка вставить билет (неверный JSON)
INSERT INTO tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '1111111111111',
  '10F447',
  '1111 111111',
  'BROKEN JSON',
  '{"phone": "bad format"'  -- error: незакрытая кавычка
);

-- Rollback only to savepoint
ROLLBACK TO SAVEPOINT inserted_booking;

-- Fixed and inserted again
INSERT INTO bookings.tickets (ticket_no, book_ref, passenger_id, passenger_name, contact_data)
VALUES (
  '1111111111111',
  '10F447',
  '1111 111111',
  'Artificial Intelligence',
  '{"phone": "101001110001011110001011110111111"}'
);

COMMIT;

select * from bookings where book_ref = '10F447';
select * from tickets where ticket_no = '1111111111111';

After that, we exit the demo database.:
\q

Then follow another directory, for example Green1:
cd Green1
